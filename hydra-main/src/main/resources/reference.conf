include "bundle-logs"

hydra.metrics {
  enable = true
  # legacy system property support
  enable = ${?ganglia.enable}

  config {
    ganglia {
      hostsString = "localhost:8649"
      compressPackageNames = false
      period: 60
      timeunit: SECONDS

      # legacy system property support
      hostsString = ${?ganglia.hosts}
      compressPackageNames = ${?ganglia.useShortNames}
    }
  }
}

plugins {
  executables {
    spawn: com.addthis.hydra.job.spawn.Spawn
    minion: com.addthis.hydra.job.minion.Minion
    mqmaster: com.addthis.hydra.query.web.QueryServer
    mqworker: com.addthis.hydra.query.MeshQueryWorker
    qutil: com.addthis.hydra.query.util.QueryChannelUtil
    task: com.addthis.hydra.task.run.TaskRunner
    fmux: com.addthis.muxy.Main
    cliquery: com.addthis.hydra.data.query.CLIQuery
    printbundles: com.addthis.hydra.task.util.BundleStreamPeeker
    mesh: com.addthis.meshy.Main
    zookeeper: org.apache.zookeeper.server.quorum.QuorumPeerMain
    zk: org.apache.zookeeper.ZooKeeperMain
    dbspace: com.sleepycat.je.util.DbSpace

    _banners { include "banners" }
  }

  job expander {
    _class: com.addthis.hydra.job.JobConfigExpander
  }
}

com.addthis.hydra.query {
  MeshQueryWorker {
    webPort = 2223
    webPort = ${?qworker.web.port} # legacy system property
  }
}
