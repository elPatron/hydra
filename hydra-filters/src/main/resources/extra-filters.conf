com.addthis.hydra.data.filter.bundle {
  BundleFilterTry {catchDo {log = caught filter failure from try block, every = 30}}
}

plugins {
  bundle-filter {
    try {
      _class: BundleFilterTry, _inline: true, _primary: try,
      _rename { tryDo = try, catchDo = catch }
    }

    if {
      _class: condition, _inline: true, _rename {
        ifCondition: if, ifDo: then, elseDo: else
      }
      returnFilter: true
    }

    log {
      _class: debug, _primary: prefix, _inline: true
      maxBundles = 1, every = 10
    }

    has {
      _class: field, _primary: from
    }

    unary { _class: BundleFilterUnary, _primary: filter }
    safely { _class: unary, operation: true }
    true { _class: unary, operation: true }
    ignore { _class: unary, operation: true }
    fail { _class: unary, operation: false }
    false { _class: unary, operation: false }
    is { _class: unary, operation: identity }
    # not is taken by a comparatively useless filter
    is not { _class: unary, operation: negation }
    invert { _class: unary, operation: negation }
    isn't { _class: unary, operation: negation }
  }
}