_log_dir = log
_log_dir = ${?HYDRA_LOG}
_err_min = warn
_err_min = ${?logging.stderr}
_out_min = info
_out_min = ${?logging.stdout}
_status_min = error
_status_min = ${?logging.status}

name: hydra-oss-default, status: ${_status_min}, shutdownHook = disable
appenders: {
  appender: [
    { name: STDOUT,
      type: Console,
      PatternLayout: { pattern: "%p [%t] %d{ISO8601} %F (line %L) %m%n" },
      target : SYSTEM_OUT
    },
    { name: STDERR,
      type: Console,
      PatternLayout: { pattern: "%p [%t] %d{ISO8601} %F (line %L) %m%n" },
      target : SYSTEM_ERR
    }
  ],
  RollingRandomAccessFile {
    name: query-trace, fileName: ${_log_dir}/query-trace/last,
    filePattern: ${_log_dir}/query-trace/"%d{yyyyMMdd-HHmmss}".gz,
    PatternLayout: { pattern: "%p [%t] %d{ISO8601} %F (line %L) %m%n" },
    Policies.Policies: [
      { type: SizeBasedTriggeringPolicy, size: 250 MB },
      { type: OnStartupTriggeringPolicy }
    ]
  }
},
loggers: {
  logger: [
    { name: query-trace, level: info, additivity: false,
      AppenderRef: { ref: query-trace }},
    { name: org.apache.activemq.spring, level: warn },
    { name: org.springframework, level: warn },
    { name: org.apache.xbean.spring, level: warn }
  ],
  root: { level: ${_out_min}, AppenderRef: [
    { ref: STDERR, level: ${_err_min}},
    { ref: STDOUT, level: ${_out_min}}
  ]}
}
